Slide 2 and 3
Project Topics
Set of topics to work on

Hoping that this will help get people to work on things that are similar for later in the quarter

You are not required to work on one of these. You won't lose points at all
But realize you might lose some of your work as we progress.
-------------------------
Slide 4
Updating Problem Sets

Once in a while there are errors in the problem sets
We find bugs once in a while. Likely will have to be updated.
If we need to fix bugs in the test suites. Then you need to upload

We can't push to your indivdual repos. You need to pull it on your own. we will push the fixes the the main repo
You will need to add another remote link to your repo (bookmark). 

you don't have to name this reference link "upstream"

I might need to give you the link to the repo because we use the same started code as sectionA 
for example on problem 2 it's : info340a-wi19/problem-02-starter

"git remote -v " will show you the remotes (bookmarks) you have attached to your repo

git pull upstream master

So now you can pull from origin, or from the other bookmark

So you can pull 
------------------------------

SLIDE 5
Infomatics Tutors

In addition to Elisa and me, there are other resources for Infomatic questions. 

Feel free to ping them if you need help. I don't have the contact info yet

----------------------------

SLIDE 6
Poll Everywhere - The goal is to get done through this quickly so you have time to do work at the end of class.

Have you done the reading (through chapter 6) for today
---
This is totally anonymous - Just want to see if people are doing the reading.
You'll do better if you keep up with the reading. Fortunately it isn't a large amount of reading


What concepts should we go over from chapter 6 (or other questions)
---
Post none if you don't have any
Psuedo Selectors
CSS for specific browsers
- In general we try and use css that is supported by all browsers. sometimes there are some new cutting edge features that show up. we try to not to use them. Some times there are moz-blank, ms-blink classes. 
Attribute Selectors


Which selector syntax would you use to style elements with class 'alert' OR with class 'success'?

The answer is C

The comma acts like an OR in CSS. I want this to be selected to this selector as well as this selector.

If you have a <space> between that says "children"... the descendent selector. Find elements that have success that are children of the success class.

Like this:
<div class="alert">
	<div class="success"> </div>
</div>


If we don't have a space at all, (like option A) that's the case where the element has both properties.
It has the class alert and success

Like this:
<div class="alert success"> </div>

Demo how Visual Code will show you the html structure of a css selector

To do this, have this in your css file:

.success .alert {
 	color: yellow
	}
Then hover over the selector

-----------------------

Which rule(s) will apply to links inside an element with class 'highlight', which is inside of a 'nav' element?

The answer is A and D. Both find a nav element, with an element with highlight class, with and anchor tag within that.

B and C are out

Find any nav element, find any highlight element and then find any anchor elements inside of that

The diff between A and D means that the > requires that the children are direct decendents. So in the A example, the element with the highlight class has to be directly within the nav element. It can't be within a <div> between even if it's a child. 
 
So A and D are correct.

CSS Diner game is linked in the text to practice https://flukeout.github.io<p

-------
Which CSS rule will correctly style the HTML? 

We want paragraphs that say they are green to be green. Those that say they are not green, they are not green.

A - Must have both class first and second
When we say it has both classes, the element has to have both.

So <div class="first second">

The first green one does not have that. It's inside an element that has class="first", but that's not the same. The element itself literally needs to have both classes.

B "div > p" This will make all the paragraphs green because they all are direct descendents of divs

C "div .second, #first"
gets the first one right because within the class the
the #first is an id, there is nothing with an id of "first"

And the bottom one has a div that is of class "second" instead of a child of a div that has class "second".  so it doesn't apply to that. Tricky yes.

C is the right answer

Only be as specific as we need to be. But only that specific.

Start with as general as possible

d: p:last-child

This is looking for paragraphs that are the last child of their parent. Thus: It applies to both of the paragraphs (even the second)

-----

You're setting the 'font-size' for a paragraph, but want to be able to easily make a "large text" version of the page by changing a single property. What is the best unit to use?

em
pt
px
rem
vw

Apply one change to apply to everything so that when the page size changes the font changes as well?

The answer is "em"
The difference between these measurements:

em - it's relative to the parent font size. It's the length of a letter m in theory. Relative to the parents font size. So if the parent size gets bigger, i get a little bit bigger too.

1 em is usually 16 pixels

rem - is dependent of the root of the page, the body element or the html element

in general use rem or em. better for accessiblity reasons because users can 

pixels is used when we know absolute sizeing like pictures because we know the pixels of pictures sometimes.

but heavilty use em and rem when using text sizing.

vw - viewport width. neat, but annoying.
no-one uses pt

--------------
In the below diagram of the box model, which CSS property corresponds to each section?

a,b,c,d

a content
b padding 
c border
d margin

#5

We're talking about spacing around content

In code - look at the boxes class

short cut property
.box p {
	border: 1px solid black;


Notice that the margins collapse onto each other.

padding is considered part of the content, so if you specify a background color it also will be part of the padding. But not the margin.


float, in general do not look good. They aren't the way to do things today.
Now there are better options (flexbox)

Float is going to take your object out of normal flow.


display:inline 

you can't set width on inline elements 

If you want to specify width or height, you call it "inline-block"

Float are really confusing. Don't freak out about doing this. We'll use flexbox



Pseudo Selectors **** **** *** ***
https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes#Index_of_standard_pseudo-classes

Index of standard pseudo-classes

Let's apply styles based on the state of a thing. like whether the mouse is hovering, or if a checkbox is checked, or if it's the last child of a particular type of a parent element.

The way you write a psuedo selector is by naming the element followed by a colon, then the attribute

p:last-child
p:first-child
p:nth-child(4) - every 4th element  - there are different syntax
p:nth-child(even) - every even element

last of type
nth of type

Click on the examples

the most common is the "hover" 

a:hover{
}

hover is almost always also tied with focus

a:hover, a:focus {

}

In general, put more specific rules further down your file

But you also might want to organize your css by section

/* header */

/*main*/

/*footer*/

*** *** *** ** ****

SLIDE 7
Simple CSS Selectors

-----------------------

SLIDE 8
CSS Group Selectors

AND
OR
Further down the page wins
More specific wins

--------------------------

SLIDE 9

Combined Selectors
(no comma or space between)

--------------------

SLIDE 10
Descendant Selectors

Space between

---------------------

SLIDE 11
Descendant Selectors (2)

Child selectors > 


-----------------

SLIDE 12

Psuedo classes
Select elements based on what "state" the element is in


-----------------

SLIDE 13

Psuedo-classes (2)

checked, first, last child, 

-----------------

SLIDE 14

nth selectors

---------------------

SLIDE 15

Attribute Selectors

attributes are parameters in some tags, like href in an anchor tg, src value in an image, or lang value in html tag


----------------------

SLIDE 16

Chrome Dev Tools

Developer tools

View/developer
developer tools

Built into chrome

Give info as the page is currently being rendered

It shows the html

When you mouse over the html, it highlights the page

click on the arrow in the box in the upper left and you can do the inverse

When you select an element, it also shows you the styles that are currently being applied




Psuedo Classes
CSS supports a bunch of pseudo classes. 
You are able to select something based on the context of the page or how other things will be rendered. 

Index of standard pseudo=classes: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes

The way we write the pseudo selector:

p:last-child 
p:first-child
P:nth-child()

p:nth-child(2) {
	color: yellow
	}

This would find paragraphs that are the 2nd child of a parent element

<div>
	<p> paragraph one </p>
	<p> paragraph two </p>  <-- this one
	<p> paragraph three </p>
</div>

Note that it's not the second paragraph, but the second child of a parent element

<div>
	<div class="success">
		<p> paragraph one </p>   <--this one
		<div>
			<p> paragraph two </p>  
			<p> paragraph three </p>    <-- this one
		</div>
	</div>
</div>

"of type" specifies that it's of a particular type


The most common selector you will see is the hover

a:hover {
	font-size: 3em;
	color: orange;
	font-weight: 900;
}

applies a style whenever the mouse hovers over it

em - relative size

hover is almost always combined with the "focus" class

If I hit <tab> through the elements
so if the focus moves you can do the same as hover

Screen readers use tabbing around


so

a:hover, a:focus {             <--- hover or focus
	font-size: 3em;
	color: orange;
	font-weight: 900;
}

a:visited {
	color: green;
}

Consider organizing your css file based on the layout of your page

/*Header*/

/*Main Section*/

/*Footer*/

The linter will probably warn you if you have more specific rules before less specific rules

got back to minute 54 in video

classes are more specific... more precise. it win's over generic things even if it's earier on the page

developer tools console

view/developer/developertools